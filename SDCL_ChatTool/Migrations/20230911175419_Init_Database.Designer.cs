// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SDCL_ChatTool.DAL;

#nullable disable

namespace SDCL_ChatTool.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20230911175419_Init_Database")]
    partial class Init_Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SDCL_ChatTool.DAL.Models.ChatGptResponseDump", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChatGptResponseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChatLogId")
                        .HasColumnType("int");

                    b.Property<int>("CompletionTokens")
                        .HasColumnType("int");

                    b.Property<string>("ContentJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtChatGptEnd")
                        .HasColumnType("datetime2");

                    b.Property<int>("PromptTokens")
                        .HasColumnType("int");

                    b.Property<int>("TotalTokens")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChatGptResponseDump", (string)null);
                });

            modelBuilder.Entity("SDCL_ChatTool.DAL.Models.ChatLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChatMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChatRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSummary")
                        .HasColumnType("bit");

                    b.Property<int>("ParticipantInfoId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChatLog", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
